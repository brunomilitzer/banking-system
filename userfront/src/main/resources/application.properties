# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mariadb://localhost:3306/onlinebanking

# Username and secret
spring.datasource.username = bankuser
spring.datasource.password = test@123

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# application-dev.properties
spring.jpa.properties.hibernate.format_sql=true
# Spring Data different options : none - create - drop - drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=none 
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=userfront/src/main/resources/schema.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

# populate initial role data
spring.sql.init.mode=never

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDB103Dialect

